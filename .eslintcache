[{"E:\\CraterZone\\mylocation\\src\\index.js":"1","E:\\CraterZone\\mylocation\\src\\reportWebVitals.js":"2","E:\\CraterZone\\mylocation\\src\\App.js":"3","E:\\CraterZone\\mylocation\\src\\DynamicTable.js":"4","E:\\CraterZone\\mylocation\\src\\Context\\reducer.js":"5","E:\\CraterZone\\mylocation\\src\\Context\\StateProvider.js":"6","E:\\CraterZone\\mylocation\\src\\Context\\stateContext.js":"7","E:\\CraterZone\\mylocation\\src\\Update.js":"8","E:\\CraterZone\\mylocation\\src\\MapContainer.js":"9"},{"size":704,"mtime":1610951394694,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":567,"mtime":1611147866455,"results":"13","hashOfConfig":"11"},{"size":5516,"mtime":1610964810719,"results":"14","hashOfConfig":"11"},{"size":512,"mtime":1610959369831,"results":"15","hashOfConfig":"11"},{"size":274,"mtime":1610951289658,"results":"16","hashOfConfig":"11"},{"size":108,"mtime":1610951175861,"results":"17","hashOfConfig":"11"},{"size":517,"mtime":1610957588710,"results":"18","hashOfConfig":"11"},{"size":558,"mtime":1610967157141,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1c3x3md",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\CraterZone\\mylocation\\src\\index.js",[],["43","44"],"E:\\CraterZone\\mylocation\\src\\reportWebVitals.js",[],"E:\\CraterZone\\mylocation\\src\\App.js",["45","46"],"E:\\CraterZone\\mylocation\\src\\DynamicTable.js",["47","48","49"],"import React, { useState, useContext ,useEffect} from \"react\";\r\nimport stateContext from \"./Context/stateContext\";\r\nimport \"./dynamicTable.css\";\r\nimport Update from \"./Update\";\r\n\r\nexport default function DynamicTable() {\r\n  const [state,dispatch] = useContext(stateContext)\r\n  const [addRows, setaddRows] = useState([\r\n    { disable: false, name: \"\", lat_lon: \"\", volume: \"\" },\r\n  ]);\r\n  const [checkStateIndex, setcheckState] = useState([]);\r\n\r\n  function handleDynamicAddRow() {\r\n    setaddRows([\r\n      ...addRows,\r\n      { disable: false, name: \"\", lat_lon: \"\", volume: \"\" },\r\n    ]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    addRows.map((data, id) => {\r\n    console.log(\"called\")\r\n      data.id=id;\r\n      dispatch({\r\n        type:\"ADD_TO_LOCATION\",\r\n        location:data,\r\n        index:id\r\n      })\r\n    });\r\n    console.log(state)\r\n\r\n    //state.filter(()=>())\r\n\r\n\r\n  }, [addRows]);\r\n\r\n  function handleDeleteRows() {\r\n    console.log(checkStateIndex);\r\n    const value = checkStateIndex?.forEach((row, index) => {\r\n      console.log(row);\r\n      const values = [...addRows];\r\n      values.splice(row, 1);\r\n      setaddRows(values);\r\n      console.log(addRows);\r\n      checkStateIndex.splice(index, 1);\r\n      setcheckState(checkStateIndex);\r\n      handleDeleteRows();\r\n    });\r\n    console.log(value);\r\n  }\r\n\r\n  const handleChangeInput = (index, event) => {\r\n    console.log(index + \"  and  \" + event);\r\n    var values = [...addRows];\r\n    console.log(event.target.value);\r\n    values[index][event.target.name] = event.target.value;\r\n    setaddRows(values);\r\n    //  values.push({'id':index})\r\n    // console.log(\"values--------\"+ {values})\r\n\r\n    console.log(addRows);\r\n  };\r\n\r\n  const handleDynamicDeleteRow = (index) => {\r\n    if (index === 0) {\r\n    }\r\n    const arrayCopy = addRows?.filter((row, rowIndex) => rowIndex !== index);\r\n\r\n    setaddRows(arrayCopy);\r\n  };\r\n  const handleCheckValue = (index, event) => {\r\n    const values = [...addRows];\r\n    values[index][event.target.name] = event.target.checked;\r\n    setcheckState([...checkStateIndex, index]);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {console.log(\"After\")}\r\n      <h1>Add rows</h1>\r\n      <div className=\"\">\r\n        <input type=\"input\" placeholder=\"Region\"></input>\r\n        <button onClick={handleDeleteRows}>Delete Selected</button>\r\n      </div>\r\n      <div>\r\n        <table style={{ overflowX: \"auto\" }}>\r\n          <div className=\"table-head\">\r\n            <h6>Disabled</h6>\r\n            <h4>Name</h4>\r\n            <h4>Latitude/Longitude</h4>\r\n            <h4>Volume</h4>\r\n            <h4>Action</h4>\r\n          </div>\r\n          {console.log(addRows)}\r\n          <div>\r\n            {addRows.map((inputField, index) => {\r\n              return (\r\n                <div>\r\n                  {console.log({ inputField })}\r\n                  <div>\r\n                    <tbody>\r\n                      <tr className=\"table-data\">\r\n                        <td>\r\n                          <input\r\n                            name=\"disable\"\r\n                            className=\"table-input\"\r\n                            type=\"checkbox\"\r\n                            checked={inputField.disable}\r\n                            onChange={(event) => handleCheckValue(index, event)}\r\n                          ></input>\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"name\"\r\n                            className=\"table-input\"\r\n                            type=\"input\"\r\n                            value={inputField.name}\r\n                            onChange={(event) =>\r\n                              handleChangeInput(index, event)\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"lat_lon\"\r\n                            className=\"table-input\"\r\n                            type=\"input\"\r\n                            value={inputField.lat_lon}\r\n                            onChange={(event) =>\r\n                              handleChangeInput(index, event)\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            name=\"volume\"\r\n                            className=\"table-input\"\r\n                            type=\"input\"\r\n                            value={inputField.volume}\r\n                            onChange={(event) =>\r\n                              handleChangeInput(index, event)\r\n                            }\r\n                          ></input>\r\n                        </td>\r\n                        <td>\r\n                          <button\r\n                            className=\"table-input\"\r\n                            onClick={handleDynamicAddRow}\r\n                          >\r\n                            Add\r\n                          </button>\r\n                          <button\r\n                            className=\"table-input\"\r\n                            onClick={(event) => handleDynamicDeleteRow(index)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\CraterZone\\mylocation\\src\\Context\\reducer.js",["50"],"export const initialState = {\r\n  location: []\r\n};\r\n\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n  {console.log(\"action -->\" + action)}\r\n\r\n  switch (action.type) {\r\n    case \"ADD_TO_LOCATION\":\r\n      return {\r\n        ...state,\r\n        location: [...state.location, action.location ]\r\n      }\r\n\r\n    case \"REMOVE_FROM_LOCATION\":\r\n      return {\r\n        ...state,\r\n       // loc: [...state.loc, ...state.loc.reduce((item)=>(loc.id!==action.loc.id))]\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\CraterZone\\mylocation\\src\\Context\\StateProvider.js",[],"E:\\CraterZone\\mylocation\\src\\Context\\stateContext.js",[],"E:\\CraterZone\\mylocation\\src\\Update.js",["51"],"import React,{useContext} from 'react'\r\nimport stateContext from './Context/stateContext'\r\n\r\nexport default function Update({data,id}) {\r\n\r\n    const [state,dispatch] = useContext(stateContext)\r\n    data.id=id;\r\n    // dispatch({\r\n    //   type:\"ADD_TO_LOCATION\",\r\n    //   location:data,\r\n    //   index:id\r\n    // })\r\n\r\n    state.push(data)\r\n    console.log(state +\"state----------\")\r\n\r\n    return (\r\n        <div>\r\n            {console.log(data?.name + \" --------  \"+ id)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n",["52","53"],"E:\\CraterZone\\mylocation\\src\\MapContainer.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":20},{"ruleId":"58","severity":1,"message":"63","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":21,"column":28,"nodeType":"66","messageId":"67","endLine":21,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":35,"column":6,"nodeType":"70","endLine":35,"endColumn":15,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":39},{"ruleId":"58","severity":1,"message":"76","line":6,"column":18,"nodeType":"60","messageId":"61","endLine":6,"endColumn":26},{"ruleId":"54","replacedBy":"77"},{"ruleId":"56","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MapContainer' is defined but never used.","'Update' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["81"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'dispatch' is assigned a value but never used.",["79"],["80"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [addRows, dispatch, state]",{"range":"84","text":"85"},[872,881],"[addRows, dispatch, state]"]